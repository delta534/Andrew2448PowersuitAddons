<project name="ModularPowersuitsAddons" default="release">
  <property environment="env"/>
  <!-- Versions -->
  <property name="build.ver" value="0.4.0"/>
  <property name="fullversion" value="${build.ver}"/>
  <property name="scala.version" value="2.10.1"/>
  <property name="mpsrecommended" value="84+"/>
  <property name="mcp.version" value="805"/>
  <property name="forgebuild" value="965"/>
  <property name="minecraft.version" value="1.6.4"/>
  <property name="forgemajor.version" value="9.11.1"/>
  <property name="forge.version" value="${minecraft.version}-${forgemajor.version}.${forgebuild}"/>
  <property name="forgeant.version" value="${forgemajor.version}.${forgebuild}"/>
  <property name="ic2api.version" value="1.118.401-lf"/>
  <property name="ueapi.version" value="2.1.0.153"/>
  <property name="asapi.version" value="0.7.0.114"/>
  <property name="icbmapi.version" value="1.3.2.216"/>
  <property name="thermexapi.version" value="2.3.0b"/>
  <property name="galacticraftapi.version" value="2"/>
  <property name="mfrapi.version" value="2.5.2B2-642"/>
  <property name="forestryapi.version" value="2.3.0.1"/>
  <property name="thaumcraftapi.version" value="0.0.5-3.0.4b"/>
  <property name="numina.version" value="0.1.1-53"/>
  <!-- Directories -->
  <property name="main.dir" value="./"/>
  <property name="mpspatch.dir" value="/net/machinemuse/powersuits/looseblock"/>
  <property name="download.dir" value="downloads"/>
  <property name="ue.download.dir" value="${download.dir}/ue/universalelectricity"/>
  <property name="src.dir" value="src"/>
  <property name="lib.dir" value="${src.dir}/lib"/>
  <property name="build.dir" value="build/${minecraft.version}"/>
  <property name="classes.dir" value="${build.dir}/packaging"/>
  <property name="forge.dir" value="${build.dir}/forge"/>
  <property name="dist.dir" value="dist"/>
  <property name="mcp.dir" value="${forge.dir}/mcp"/>
  <property name="mcplib.dir" value="${mcp.dir}/lib"/>
  <property name="mcpsrc.dir" value="${mcp.dir}/src/minecraft"/>
  <property name="resources.dir" value="assets/powersuits"/>
  <property name="apisource.url" value="http://machinemuse.minecraftforge.net"/>
  <property name="forge.url" value=         "http://files.minecraftforge.net/maven/net/minecraftforge/forge/${forge.version}/forge-${forge.version}-src.zip" />
  <property name="technicjenkins.url" value="http://build.technicpack.net/job/Numina/lastSuccessfulBuild/artifact/dist"/>
    <!-- Doing stuff -->
  <property file="${forge.dir}/forgeversion.properties"/>
  <condition property="forge-already-installed">
    <equals arg1="${forge.build.number}" arg2="${forgebuild}"/>
  </condition>
  <available property="forge-exists" file="${download.dir}/minecraftforge-src-${forge.version}.zip"/>
  <available property="already-compiled" file="${mcp.dir}/reobf/minecraft/andrew"/>
  <condition property="should-download-ant-contrib">
    <or>
      <available file="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
      <available file="${download.dir}/minecraftforge-src-${forge.version}.zip"/>
    </or>
  </condition>
  <condition property="have-apis">
    <and>
      <available file="${download.dir}/industrialcraft-2-api_${ic2api.version}.zip"/>
      <available file="${download.dir}/UniversalElectricity_v${ueapi.version}.zip"/>
      <available file="${download.dir}/ICBM_API_v${icbmapi.version}.zip"/>
      <available file="${download.dir}/ThermalExpansion-API-${thermexapi.version}.zip"/>
      <available file="${download.dir}/CoFHCore-API.zip"/>
      <available file="${download.dir}/AtomicScience_v${asapi.version}.zip"/>
      <available file="${download.dir}/GalacticraftAPIB.zip"/>
      <available file="${download.dir}/Railcraft_API_latest.zip"/>
      <available file="${download.dir}/MFR-API-${mfrapi.version}.zip"/>
      <available file="${download.dir}/forestry-api-${forestryapi.version}.zip"/>
      <available file="${download.dir}/scalalib-${scala.version}.zip"/>
      <available file="${download.dir}/ThaumcraftApi ${thaumcraftapi.version}.zip"/>
      <available file="${download.dir}/MFFS2_API.zip"/>
      <available file="${download.dir}/BuildcraftAPI.zip"/>
      <available file="${download.dir}/slick-util.jar"/>
    </and>
  </condition>
  <target name="forgeinstalled.check"/>
  <!-- ============================================================Clean===================================================================================== -->
  <target name="clean">
    <delete dir="${mcpsrc.dir}/andrew"/>
    <delete dir="${mcpsrc.dir}/net/machinemuse"/>
    <delete dir="${download.dir}/MachineMusePowersuits"/>
    <delete dir="${download.dir}/Numina"/>
  </target>
  <!-- ============================================================Download forge============================================================================ -->
  <target name="download forge" depends="download ant-contrib" unless="forge-exists">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
        <pathelement location="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
        <fileset dir="${download.dir}/ant-contrib/lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </taskdef>
    <echo message="Downloading forge... "/>
    <get src="${forge.url}" dest="${download.dir}/minecraftforge-src-${forge.version}.zip" />
  </target>
  <!-- ============================================================Download ant-contrib====================================================================== -->
  <target name="download ant-contrib" unless="should-download-ant-contrib">
    <echo message="Getting: ant-contrib"/>
    <mkdir dir="${download.dir}/tmp"/>
    <mkdir dir="${download.dir}/ant-contrib/lib"/>
    <get src="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.zip/download"
             dest="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip"/>
    <get src="http://archive.apache.org/dist/commons/codec/binaries/commons-codec-1.6-bin.zip"
             dest="${download.dir}/tmp/commons-codec-1.6-bin.zip"/>
    <unzip src="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip" dest="${download.dir}"/>
    <unzip src="${download.dir}/tmp/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp"/>
    <move todir="${download.dir}/ant-contrib/lib">
      <fileset file="${download.dir}/tmp/commons-codec-1.6/commons-codec-1.6.jar"/>
    </move>
    <!-- Delete useless files -->
    <delete dir="${download.dir}/ant-contrib/docs"/>
    <delete dir="${download.dir}/tmp"/>
  </target>
  <!-- ============================================================Setup forge=============================================================================== -->
  <target name="download-jgit" unless="should-download-jgit">
    <echo message="Getting: JGit"/>
    <mkdir dir="${download.dir}/jgit"/>
    <get dest="${download.dir}/jgit/jsch.jar" src="http://downloads.sourceforge.net/project/jsch/jsch.jar/0.1.50/jsch-0.1.50.jar"/>
    <get dest="${download.dir}/jgit/jgit.jar" src="https://repo.eclipse.org/content/repositories/jgit-releases/org/eclipse/jgit/org.eclipse.jgit/3.0.3.201309161630-r/org.eclipse.jgit-3.0.3.201309161630-r.jar"/>
    <get dest="${download.dir}/jgit/jgit-ant.jar" src="https://repo.eclipse.org/content/repositories/jgit-releases/org/eclipse/jgit/org.eclipse.jgit.ant/3.0.3.201309161630-r/org.eclipse.jgit.ant-3.0.3.201309161630-r.jar"/>
  </target>
  <condition property="should-download-jgit">
    <and>
      <available file="${download.dir}/jgit/jgit-ant.jar"/>
      <available file="${download.dir}/jgit/jgit.jar"/>
      <available file="${download.dir}/jgit/jsch.jar"/>
    </and>
  </condition>
  <target name="setup forge" depends="download forge" unless="forge-already-installed">
    <unzip dest="${build.dir}">
      <fileset dir="${download.dir}">
        <include name="minecraftforge-src-${forge.version}.zip"/>
      </fileset>
    </unzip>
    <!-- Change executables' permitions -->
    <chmod file="${forge.dir}/install.sh" perm="+x"/>
    <!-- if your building on OSX these 2 should be executable -->
    <!-- Install forge -->
    <delete dir="${mcp.dir}" failonerror="no"/>
    <exec dir="${forge.dir}" executable="cmd" osfamily="windows" inputstring="Yes\n">
      <arg line="/c install.cmd"/>
    </exec>
    <exec dir="${forge.dir}" executable="sh" osfamily="unix" inputstring="Yes\n">
      <arg value="install.sh"/>
    </exec>
    <chmod file="${mcp.dir}/updatemd5.sh" perm="+x"/>
    <chmod file="${mcp.dir}/recompile.sh" perm="+x"/>
    <chmod file="${mcp.dir}/reobfuscate.sh" perm="+x"/>
    <chmod file="${mcp.dir}/runtime/bin/astyle-osx" perm="+x"/>
    <chmod file="${mcp.dir}/runtime/bin/jad-osx" perm="+x"/>
    <mkdir dir="${mcpsrc.dir}/net/machinemuse"/>
    <mkdir dir="${mcpsrc.dir}/andrew"/>
  </target>
  <!-- ============================================================Download APIs============================================================================= -->
  <macrodef name="get-api">
    <attribute name="filename"/>
    <attribute name="into"/>
    <sequential>
      <!--<if>-->
      <!--<available file="${download.dir}/@{filename}"/>-->
      <!--<then>-->
      <echo message="Downloading @{filename}... "/>
      <get src="${apisource.url}/@{filename}" dest="${download.dir}/@{filename}"/>
      <!--</then>-->
      <!--</if>-->
      <echo message="Extracting @{filename}... "/>
      <mkdir dir="@{into}"/>
      <unzip src="${download.dir}/@{filename}" dest="@{into}"/>
    </sequential>
  </macrodef>
  <!-- Dependencies -->
  <target name="extract-apis" depends="setup forge">
    <get-api filename="industrialcraft-2-api_${ic2api.version}.zip" into="${download.dir}"/>
    <mkdir dir="${mcpsrc.dir}/ic2/api/energy/tile"/>
    <move todir="${mcpsrc.dir}/ic2/api/">
      <fileset dir="${download.dir}/ic2/api/recipe"/>
    </move>
    <move file="${download.dir}/ic2/api/item/ICustomElectricItem.java" todir="${mcpsrc.dir}/ic2/api/item/"/>
    <move file="${download.dir}/ic2/api/item/ISpecialElectricItem.java" todir="${mcpsrc.dir}/ic2/api/item/"/>
    <move file="${download.dir}/ic2/api/item/IElectricItemManager.java" todir="${mcpsrc.dir}/ic2/api/item/"/>
    <move file="${download.dir}/ic2/api/item/IElectricItem.java" todir="${mcpsrc.dir}/ic2/api/item/"/>
    <move file="${download.dir}/ic2/api/item/ElectricItem.java" todir="${mcpsrc.dir}/ic2/api/item/"/>
    <move file="${download.dir}/ic2/api/item/Items.java" todir="${mcpsrc.dir}/ic2/api/item/"/>
    <move file="${download.dir}/ic2/api/Direction.java" todir="${mcpsrc.dir}/ic2/api/"/>
    <move file="${download.dir}/ic2/api/tile/IWrenchable.java" todir="${mcpsrc.dir}/ic2/api/tile/"/>
    <move file="${download.dir}/ic2/api/energy/EnergyNet.java" todir="${mcpsrc.dir}/ic2/api/energy/"/>
    <move todir="${mcpsrc.dir}/ic2/api/energy/tile/">
      <fileset dir="${download.dir}/ic2/api/energy/tile/"/>
    </move>
    <get-api filename="UniversalElectricity_API_v${ueapi.version}.zip" into="${download.dir}/ue"/>
    <mkdir dir="${mcpsrc.dir}/universalelectricity/core/"/>
    <mkdir dir="${mcpsrc.dir}/universalelectricity/prefab/implement/"/>
    <move todir="${mcpsrc.dir}/universalelectricity/core/">
      <fileset dir="${ue.download.dir}/core/"/>
    </move>
    <get-api filename="ICBM_API_v${icbmapi.version}.zip" into="${download.dir}/ue"/>
    <mkdir dir="${mcpsrc.dir}/icbm/api/explosion"/>
    <move file="${download.dir}/ue/icbm/api/explosion/IExplosion.java"
              todir="${mcpsrc.dir}/icbm/api/explosion/"/>
    <move file="${download.dir}/ue/icbm/api/explosion/IEMPItem.java"
              todir="${mcpsrc.dir}/icbm/api/explosion/"/>
    <get-api filename="Atomic_Science_API_v${asapi.version}.zip" into="${download.dir}/ue"/>
    <mkdir dir="${mcpsrc.dir}/atomicscience/api/poison"/>
    <move file="${download.dir}/ue/poison/Poison.java"
              todir="${mcpsrc.dir}/atomicscience/api/poison"/>
    <move file="${download.dir}/ue/IAntiPoisonArmor.java"
              todir="${mcpsrc.dir}/atomicscience/api"/>
    <get-api filename="ThermalExpansion-API-${thermexapi.version}.zip" into="${download.dir}"/>
    <mkdir dir="${mcpsrc.dir}/thermalexpansion/api/core"/>
    <move file="${download.dir}/thermalexpansion/api/item/ItemRegistry.java"
              todir="${mcpsrc.dir}/thermalexpansion/api/item"/>
    <get-api filename="CoFHCore-API.zip" into="${download.dir}"/>
    <mkdir dir="${mcpsrc.dir}/cofh/api/tileentity"/>
    <move file="${download.dir}/cofh/api/tileentity/IReconfigurableFacing.java"
              todir="${mcpsrc.dir}/cofh/api/tileentity"/>
    <move file="${download.dir}/cofh/api/tileentity/ITileInfo.java"
              todir="${mcpsrc.dir}/cofh/api/tileentity"/>
    <get-api filename="CoFHLib-pre1.zip" into="${download.dir}"/>
    <mkdir dir="${mcpsrc.dir}/cofh/api/energy"/>
    <move file="${download.dir}/cofh/api/energy/IEnergyContainerItem.java"
              todir="${mcpsrc.dir}/cofh/api/energy"/>
    <get-api filename="galacticraft-src-${galacticraftapi.version}.zip" into="${download.dir}"/>
    <mkdir dir="${mcpsrc.dir}/micdoodle8/mods/galacticraft/api/item"/>
    <move file="${download.dir}/micdoodle8/mods/galacticraft/api/item/IBreathableArmor.java"
              todir="${mcpsrc.dir}/micdoodle8/mods/galacticraft/api/item"/>
    <get-api filename="Railcraft_API_latest.zip" into="${download.dir}"/>
    <mkdir dir="${mcpsrc.dir}/mods/railcraft/api/core/items"/>
    <mkdir dir="${mcpsrc.dir}/buildcraft/api/tools/"/>
    <move file="${download.dir}/src/minecraft/mods/railcraft/api/core/items/IToolCrowbar.java"
              todir="${mcpsrc.dir}/mods/railcraft/api/core/items"/>
    <move file="${download.dir}/src/minecraft/buildcraft/api/tools/IToolWrench.java"
              todir="${mcpsrc.dir}/buildcraft/api/tools"/>
    <get-api filename="MFR-API-${mfrapi.version}.zip" into="${download.dir}"/>
    <mkdir dir="${mcpsrc.dir}/powercrystals/minefactoryreloaded/api"/>
    <move file="${download.dir}/powercrystals/minefactoryreloaded/api/IToolHammerAdvanced.java"
              todir="${mcpsrc.dir}/powercrystals/minefactoryreloaded/api"/>
    <get-api filename="forestry-api-${forestryapi.version}.zip" into="${download.dir}"/>
    <mkdir dir="${mcpsrc.dir}/forestry/api/apiculture"/>
    <mkdir dir="${mcpsrc.dir}/forestry/api/arboriculture"/>
    <mkdir dir="${mcpsrc.dir}/forestry/api/core"/>
    <move file="${download.dir}/forestry/api/apiculture/IArmorApiarist.java"
              todir="${mcpsrc.dir}/forestry/api/apiculture"/>
    <move file="${download.dir}/forestry/api/arboriculture/IToolGrafter.java"
              todir="${mcpsrc.dir}/forestry/api/arboriculture"/>
    <move file="${download.dir}/forestry/api/core/ItemInterface.java" todir="${mcpsrc.dir}/forestry/api/core"/>
    <get-api filename="Thaumcraft4.0.5-API.zip" into="${download.dir}/thaumcraft" />
    <mkdir dir="${mcpsrc.dir}/thaumcraft/api/nodes" />
    <move file="${download.dir}/thaumcraft/api/IGoggles.java" todir="${mcpsrc.dir}/thaumcraft/api" />
    <move file="${download.dir}/thaumcraft/api/nodes/IRevealer.java" todir="${mcpsrc.dir}/thaumcraft/api/nodes" />
    <get-api filename="MFFS2_API.zip" into="${download.dir}"/>
    <mkdir dir="${mcpsrc.dir}/mods/mffs/api"/>
    <move file="${download.dir}/mods/mffs/api/IFieldTeleporter.java" todir="${mcpsrc.dir}/mods/mffs/api"/>
    <move file="${download.dir}/mods/mffs/api/IMFFS_Wrench.java" todir="${mcpsrc.dir}/mods/mffs/api"/>
    <get src="${apisource.url}/scalalib-${scala.version}.zip"
             dest="${mcplib.dir}/scalalib-${scala.version}.zip"/>
    <delete>
      <fileset dir="${mcplib.dir}" includes="Numina-*.jar"/>
    </delete>
    <move todir="${mcplib.dir}">
      <fileset dir="${dist.dir}" includes="Numina-dev-*.jar"/>
    </move>
    <get src="${apisource.url}/slick-util.jar"
             dest="${download.dir}/slick-util.jar"/>
    <copy file="${download.dir}/slick-util.jar" todir="${mcp.dir}/lib"/>
  </target>
  <available property="have-numina" file="${mcplib}/Numina-dev-${numina.version}.jar"/> 
  <!-- ============================================================Download MPS============================================================================== -->
  <target name="download MPS" depends="download-jgit,download-numina">
    <taskdef resource="org/eclipse/jgit/ant/ant-tasks.properties">
      <classpath>
        <pathelement location="${download.dir}/jgit/jgit-ant.jar"/>
        <pathelement location="${download.dir}/jgit/jgit.jar"/>
        <pathelement location="${download.dir}/jgit/jsch.jar"/>
      </classpath>
    </taskdef>
    <git-clone uri="https://github.com/MachineMuse/MachineMusePowersuits.git" dest="${download.dir}/MachineMusePowersuits"/>
  </target>
  <target name="download-numina" unless="have-numina">
    <get src="${technicjenkins.url}/Numina-dev-${numina.version}.jar" dest="${dist.dir}\numina-dev-${numina.version}.jar"/>
  </target>
  <!-- ============================================================Update names===================================================================================== -->
  <target name="update names">
    <get src="http://mcp.ocean-labs.de/files/mcptest/methods.csv" dest="${mcp.dir}/conf/methods.csv"/>
    <get src="http://mcp.ocean-labs.de/files/mcptest/fields.csv" dest="${mcp.dir}/conf/fields.csv"/>
    <exec dir="${mcp.dir}" executable="cmd" osfamily="windows" failonerror="true">
      <arg line="/c updatenames.bat"/>
    </exec>
    <exec dir="${mcp.dir}" executable="bash" osfamily="unix" failonerror="true">
      <arg value="-c"/>
      <arg value="echo Yes | ./updatenames.sh"/>
    </exec>
  </target>
  <!-- ============================================================Build===================================================================================== -->
  <target name="build">
    <delete dir="${mcpsrc.dir}/minecraft/andrew"/>
    <delete dir="${mcpsrc.dir}/andrew"/>
    <mkdir dir="${mcpsrc.dir}/andrew"/>
    <copy todir="${mcpsrc.dir}/andrew">
      <fileset dir="${src.dir}/minecraft/andrew"/>
    </copy>
    <copy todir="${mcpsrc.dir}/net">
      <fileset dir="${download.dir}/MachineMusePowersuits/src/minecraft/net"/>
    </copy>
    <copy file="${dist.dir}/numina-dev-${numina.version}.jar" todir="${mcplib.dir}"/>
    <replace dir="${mcpsrc.dir}/andrew/powersuits/common" token="0.4.0" value="${fullversion}"/>
    <replace dir="${main.dir}" token="0.4.0" value="${fullversion}"/>
    <copy todir="${mcpsrc.dir}/net/minecraft/src" file="${download.dir}/MachineMusePowersuits/src/minecraft/net/minecraft/src/ModelPlayer.java"/>
    <!--I should do a pull request about this, but it is so minor and is an artifact of my build process-->
    <delete file="${mcpsrc.dir}/${mpspatch.dir}/ChunkProviderEntity.java" /> 
    <copy file="${src.dir}/minecraft/${mpspatch.dir}/ChunkProviderEntity.java" todir="${mcpsrc.dir}/${mpspatch.dir}"/>
    <echo message="Applying Scala patches..."/>
    <echo message="Applying Scala mcp patch..."/>
    <get src="http://machinemuse.minecraftforge.net/scalapatch.sh" dest="${mcp.dir}/conf/scalapatch.sh"/>
    <!--<unzip src="${download.dir}/scalapatch.zip" dest="${mcp.dir}"/>-->
    <copy file="${mcp.dir}/conf/mcp.cfg" tofile="${mcp.dir}/conf/mcp.cfg.bak" />
    <replace file="${mcp.dir}/conf/mcp.cfg" token="-target 1.6 -classpath &quot;{classpath}&quot;" 
    value="-target 1.6 -classpath &quot;{classpath}:{outpath}&quot;"/>
  </target>
  <!-- ============================================================Recompile================================================================================= -->
  <target name="recompile">
    <exec dir="${mcp.dir}" executable="cmd" osfamily="windows" failonerror="true">
      <arg line="/c recompile.bat"/>
    </exec>
    <exec dir="${mcp.dir}" executable="sh" osfamily="unix" failonerror="true">
      <arg value="recompile.sh"/>
    </exec>
  </target>
  <!-- ============================================================Reobfuscate=============================================================================== -->
  <target name="reobfuscate">
    <exec dir="${mcp.dir}" executable="cmd" osfamily="windows" failonerror="true">
      <arg value="/c reobfuscate.bat"/>
    </exec>
    <exec dir="${mcp.dir}" executable="sh" osfamily="unix" failonerror="true">
      <arg value="reobfuscate.sh"/>
    </exec>
  </target>
  <!-- ============================================================Release=================================================================================== -->
  <target name="release"
            depends="clean, download forge, setup forge, download MPS, extract-apis, build, recompile, reobfuscate">
    <!--jar destfile="${dist.dir}/MPSA-${fullversion}_MPS-${mpsrecommended}.jar"-->
    <jar destfile="${dist.dir}/MPSA-${fullversion}_Requires_MPS-${mpsrecommended}.jar">
      <fileset dir="${mcp.dir}/reobf/minecraft" includes="andrew/**"/>
      <fileset file="${main.dir}/mcmod.info"/>
      <fileset file="${main.dir}/MODLICENSE.txt"/>
      <fileset dir="${main.dir}" includes="assets/**"/>
    </jar>
    <antcall target="clean"/>
  </target>
  <target name="fullclean">
    <delete dir="${build.dir}"/>
    <delete dir="${download.dir}"/>
  </target>
</project>


